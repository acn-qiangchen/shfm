AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 30
    MemorySize: 256
    Environment:
      Variables:
        STAGE: !Ref Stage
        TRANSACTIONS_TABLE: !Ref TransactionsTable
        TAGS_TABLE: !Ref TagsTable

Resources:
  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub shfm-user-pool-${Stage}
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
      
  # Cognito User Pool Client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub shfm-client-${Stage}
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      CallbackURLs:
        - http://localhost:5173
      LogoutURLs:
        - http://localhost:5173
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO

  # DynamoDB Tables
  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub shfm-transactions-${Stage}
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: byUserAndDate
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  TagsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub shfm-tags-${Stage}
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: byUser
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  # API Gateway
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt UserPool.Arn

  # Lambda Functions
  CreateTransactionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/transactions
      Handler: create.handler
      Events:
        Api:
          Type: Api
          Properties:
            Path: /transactions
            Method: POST
            RestApiId: !Ref Api

  ListTransactionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/transactions
      Handler: list.handler
      Events:
        Api:
          Type: Api
          Properties:
            Path: /transactions
            Method: GET
            RestApiId: !Ref Api

  CreateTagFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/tags
      Handler: create.handler
      Events:
        Api:
          Type: Api
          Properties:
            Path: /tags
            Method: POST
            RestApiId: !Ref Api

  ListTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/tags
      Handler: list.handler
      Events:
        Api:
          Type: Api
          Properties:
            Path: /tags
            Method: GET
            RestApiId: !Ref Api

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
  
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
  
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient 